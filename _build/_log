### Starting build.
# Target: command.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules command.mli > command.mli.depends
# Target: command.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o command.cmi command.mli
# Target: command.ml.depends, tags: { package(oUnit), package(yojson), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules command.ml > command.ml.depends
# Target: command.cmo, tags: { package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o command.cmo command.ml
# Target: state.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules state.mli > state.mli.depends
# Target: board.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:board.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules board.mli > board.mli.depends
# Target: board.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:board.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o board.cmi board.mli
# Target: state.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o state.cmi state.mli
# Target: state.ml.depends, tags: { package(oUnit), package(yojson), extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules state.ml > state.ml.depends
# Target: state.cmo, tags: { package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o state.cmo state.ml
# Target: main.mli.depends, tags: { package(oUnit), package(yojson), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules main.mli > main.mli.depends
# Target: main.cmi, tags: { package(oUnit), package(yojson), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o main.cmi main.mli
# Target: main.ml.depends, tags: { package(oUnit), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -modules main.ml > main.ml.depends
# Target: main.cmo, tags: { package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -o main.cmo main.ml
+ ocamlfind ocamlc -c -package oUnit -package yojson -o main.cmo main.ml
File "main.ml", line 138, characters 2-13:
138 |   update_desc brd st;
        ^^^^^^^^^^^
Error: Unbound value update_desc
Command exited with code 2.
# Compilation unsuccessful.
